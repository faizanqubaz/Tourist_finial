{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CL\\\\Downloads\\\\Tourist\\\\Tourist\\\\project\\\\src\\\\component\\\\Chat\\\\userChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserChat = ({\n  socket,\n  username,\n  room\n}) => {\n  _s();\n\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [message, setMessage] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        username: username,\n        room: room,\n        currentMessage: currentMessage,\n        time: new Date(Date.now()).getHours() + ':' + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit('send_message', messageData);\n      setMessage(list => [...list, messageData]);\n    }\n  };\n\n  useEffect(() => {\n    socket.on('receive_message', data => {\n      setMessage(list => [...list, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_body\",\n      children: message.map(m => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-around',\n            width: '7%',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: m.currentMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: m.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Hey...\",\n        onChange: event => setCurrentMessage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserChat, \"3iWTsAlIUZHF3/byfJZZfaml3zE=\");\n\n_c = UserChat;\nexport default UserChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserChat\");","map":{"version":3,"sources":["C:/Users/CL/Downloads/Tourist/Tourist/project/src/component/Chat/userChat.js"],"names":["React","useEffect","useState","UserChat","socket","username","room","currentMessage","setCurrentMessage","message","setMessage","sendMessage","messageData","time","Date","now","getHours","getMinutes","emit","list","on","data","map","m","display","justifyContent","width","alignItems","color","event","target","value"],"mappings":";;;AACA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;;;;AAIA,MAAMC,QAAQ,GAAC,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA,QAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA2B;AAAA;;AAC1C,QAAM,CAACC,cAAD,EAAgBC,iBAAhB,IAAqCN,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;;AAGA,QAAMS,WAAW,GAAE,YAAW;AAC5B,QAAGJ,cAAc,KAAK,EAAtB,EAAyB;AACxB,YAAMK,WAAW,GAAC;AACdP,QAAAA,QAAQ,EAACA,QADK;AAEdC,QAAAA,IAAI,EAACA,IAFS;AAGdC,QAAAA,cAAc,EAACA,cAHD;AAIdM,QAAAA,IAAI,EAAC,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,QAArB,KAAkC,GAAlC,GACL,IAAIF,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBE,UAArB;AALc,OAAlB;AAOA,YAAMb,MAAM,CAACc,IAAP,CAAY,cAAZ,EAA2BN,WAA3B,CAAN;AACAF,MAAAA,UAAU,CAAES,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAASP,WAAT,CAAT,CAAV;AACA;AACF,GAZD;;AAcKX,EAAAA,SAAS,CAAC,MAAI;AAEfG,IAAAA,MAAM,CAACgB,EAAP,CAAU,iBAAV,EAA6BC,IAAD,IAAQ;AACjCX,MAAAA,UAAU,CAAES,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAASE,IAAT,CAAT,CAAV;AACF,KAFD;AAGI,GALM,EAKL,CAACjB,MAAD,CALK,CAAT;AAMD,sBACI;AAAA,4BAEP;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFO,eAKP;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAEQK,OAAO,CAACa,GAAR,CAAaC,CAAD,iBACT;AAAA,+BACF;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAC,MAAT;AAAgBC,YAAAA,cAAc,EAAC,cAA/B;AAA8CC,YAAAA,KAAK,EAAC,IAApD;AAAyDC,YAAAA,UAAU,EAAC;AAApE,WAAZ;AAAA,kCACA;AAAA,sBAAKJ,CAAC,CAAChB;AAAP;AAAA;AAAA;AAAA;AAAA,kBADA,eAEG;AAAG,YAAA,KAAK,EAAE;AAACqB,cAAAA,KAAK,EAAC;AAAP,aAAV;AAAA,sBAA0BL,CAAC,CAACV;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADE,uBADH;AAFR;AAAA;AAAA;AAAA;AAAA,YALO,eAiBP;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,QAAQ,EAAGgB,KAAD,IAASrB,iBAAiB,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA5E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEpB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBO;AAAA,kBADJ;AAyBH,CAlDD;;GAAMR,Q;;KAAAA,Q;AAoDN,eAAeA,QAAf","sourcesContent":["\r\nimport React,{useEffect, useState} from 'react';\r\n\r\n\r\n\r\nconst UserChat=({socket,username,room}) =>{\r\nconst [currentMessage,setCurrentMessage] = useState(\"\");\r\nconst [message, setMessage]= useState([]);\r\n\r\n\r\nconst sendMessage= async() => {\r\n  if(currentMessage !== \"\"){\r\n   const messageData={\r\n       username:username,\r\n       room:room,\r\n       currentMessage:currentMessage,\r\n       time:new Date(Date.now()).getHours() + ':' +\r\n       new Date(Date.now()).getMinutes() \r\n   }\r\n   await socket.emit('send_message',messageData);\r\n   setMessage((list)=>[...list,messageData])\r\n  }\r\n}\r\n\r\n     useEffect(()=>{\r\n      \r\n    socket.on('receive_message',(data)=>{\r\n       setMessage((list)=>[...list,data])\r\n    })\r\n       },[socket])\r\n    return(\r\n        <>\r\n\r\n <div className='chat_footer'>\r\n     <p>Live Chat</p>\r\n </div>\r\n <div className='chat_body'>\r\n     {\r\n         message.map((m)=>(\r\n            <>\r\n          <div style={{display:'flex',justifyContent:'space-around',width:'7%',alignItems:'center'}}>\r\n          <h3>{m.currentMessage}</h3>\r\n             <p style={{color:'red'}}>{m.time}</p>\r\n          </div>\r\n            </>\r\n         ))\r\n     }\r\n </div>\r\n <div className='chat_footer'>\r\n     <input type='text' placeholder='Hey...' onChange={(event)=>setCurrentMessage(event.target.value)} />\r\n     <button onClick={sendMessage}>&#9658;</button>\r\n </div>\r\n             \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserChat;"]},"metadata":{},"sourceType":"module"}